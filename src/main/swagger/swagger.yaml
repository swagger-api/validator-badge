---
openapi: 3.0.0
info:
  title: Swagger Validator Badge
  description: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition
  version: 2.0.12
servers:
- url: "/"
paths:
  "/":
    get:
      tags:
      - Validator
      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a valid/invalid badge
      description: |
        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via `url` parameter
        returning a valid/invalid badge
      operationId: validateByUrl
      parameters:
      - name: url
        in: query
        description: A URL to the definition
        required: true
        schema:
          type: string
      responses:
        '200':
          description: result of validation as valid/invalid badge
          content:
            "image/png":
              schema:
                type: string
                format: binary
    post:
      tags:
      - Validator
      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a valid/invalid badge
      description: |
        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided in request body
        returning a valid/invalid badge
      operationId: validateByContent
      requestBody:
        description: the specification to validate
        content:
          "application/yaml":
            schema:
              type: object
          "application/json":
            schema:
              type: object
        required: true
      responses:
        '200':
          description: result of validation as valid/invalid badge
          content:
            "image/png":
              schema:
                type: string
                format: binary
  "/debug":
    get:
      tags:
      - Validator
      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a validation response
      description: |
        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via `url` parameter
        returning a validation response containing any found validation errors
      operationId: reviewByUrl
      parameters:
      - name: url
        in: query
        description: A URL to the definition
        required: true
        schema:
          type: string
      responses:
        '200':
          description: result of validation as a validation response
          content:
            "application/yaml":
              schema:
                $ref: '#/components/schemas/ValidationResponse'
            "application/json":
              schema:
                $ref: '#/components/schemas/ValidationResponse'
    post:
      tags:
      - Validator
      summary: Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition returning a validation response
      description: |
        Validates a Swagger/OpenAPI 2.0 or an OpenAPI 3.0 definition provided via request body
        returning a validation response containing any found validation errors
      operationId: reviewByContent
      requestBody:
        description: the specification to validate
        content:
          "application/json":
            schema:
              type: object
          "application/yaml":
            schema:
              type: object
        required: true
      responses:
        '200':
          description: result of validation as a validation response
          content:
            "application/yaml":
              schema:
                $ref: '#/components/schemas/ValidationResponse'
            "application/json":
              schema:
                $ref: '#/components/schemas/ValidationResponse'
components:
  schemas:
    Instance:
      type: object
      properties:
        pointer:
          type: string
    Schema:
      type: object
      properties:
        loadingURI:
          type: string
        pointer:
          type: string
    SchemaValidationError:
      type: object
      properties:
        level:
          type: string
        domain:
          type: string
        keyword:
          type: string
        message:
          type: string
        schema:
          $ref: '#/components/schemas/Schema'
        instance:
          $ref: '#/components/schemas/Instance'
        required:
          type: array
          items:
            type: string
        missing:
          type: array
          items:
            type: string
    ValidationResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            type: string
        schemaValidationMessages:
          type: array
          items:
            $ref: '#/components/schemas/SchemaValidationError'
